# builder stage
FROM debian:bullseye AS builder

RUN apt-get upgrade -y

# build-essential needed for CGO (gcc)
RUN apt-get update && apt-get install -y curl build-essential
# needed to (later) build DuckSoup
RUN apt-get update && apt-get install -y libgstreamer-plugins-base1.0-dev

# install go, choose version on https://golang.org/dl/
WORKDIR /usr/local/src/go
ENV GO_ARCHIVE=go1.16.6.linux-amd64.tar.gz
ENV GO_ARCHIVE_CHECKSUM="be333ef18b3016e9d7cb7b1ff1fdb0cac800ca0be4cf2290fe613b3d069dfe0d"

RUN curl -O https://dl.google.com/go/$GO_ARCHIVE
RUN if [ "$(sha256sum $GO_ARCHIVE)" != "$GO_ARCHIVE_CHECKSUM  $GO_ARCHIVE" ]; then exit 1; fi
RUN tar -xzf $GO_ARCHIVE

RUN mv go /usr/local
RUN rm $GO_ARCHIVE

ENV PATH=$PATH:/usr/local/go/bin

# build DuckSoup
WORKDIR /usr/local/src/ducksoup

# layer with deps
COPY go.mod .
COPY go.sum .
RUN go mod download

# layer more frequently updated (DuckSoup source)
COPY . .
RUN go build
RUN mkdir -p /build
RUN cp ./ducksoup /build
RUN cp -r ./etc /build
RUN cp -r ./front /build

# runner stage
FROM debian:bullseye AS final

RUN apt-get upgrade -y
RUN apt-get update

# needed for dlib
RUN apt-get update && apt-get install -y build-essential

# GStreamer: plugins and compilation dependencies (libav includes avdec_h264)
RUN apt-get update && apt-get install -y gstreamer1.0-plugins-base \
    gstreamer1.0-plugins-good \
    gstreamer1.0-plugins-bad \
    gstreamer1.0-plugins-ugly \
    gstreamer1.0-libav

# conditionally build dlib
ARG DLIB
WORKDIR /usr/local/src
COPY docker-deps/dlib/*.tar.bz2 .
RUN if [ "$DLIB" = "true" ]; then echo Building *with* dlib ; else echo Building *without* dlib; fi
RUN if [ "$DLIB" = "true" ]; then apt-get update && apt-get install -y bzip2 cmake ninja-build; fi
RUN if [ "$DLIB" = "true" ]; then mkdir -p /usr/local/src/dlib/build; fi
RUN if [ "$DLIB" = "true" ]; then tar -xvf ./dlib.tar.bz2 -C dlib --strip-components 1; fi
WORKDIR /usr/local/src/dlib/build
RUN if [ "$DLIB" = "true" ]; then cmake -GNinja \
    -DCMAKE_INSTALL_PREFIX:PATH=/usr \
    -DCMAKE_INSTALL_LIBDIR:PATH=/usr/lib \
    -DBUILD_SHARED_LIBS=ON \
    -DCMAKE_BUILD_TYPE=Release \
    -DUSE_SSE2_INSTRUCTIONS=ON \
    -DUSE_SSE4_INSTRUCTIONS=ON \
    -DUSE_AVX_INSTRUCTIONS=ON \
    -DDLIB_USE_CUDA=OFF \
    ".."; fi
RUN if [ "$DLIB" = "true" ]; then ninja; fi
RUN if [ "$DLIB" = "true" ]; then ninja install; fi
# GStreamer: more plugins and dependencies (for OpenCV and dlib)
RUN if [ "$DLIB" = "true" ]; then apt-get update && apt-get install -y gstreamer1.0-libav \
    libgstreamer-opencv1.0-0 \
    libopencv-imgproc4.5 \
    libopenblas-base \
    libopenblas-dev \
    liblapack-dev \
    libdlib-data \
    libopencv-calib3d-dev; fi

# useful when inspecting container state / bad when image size needs to be optimized
RUN apt-get update && apt-get install -y gstreamer1.0-tools

WORKDIR /app

COPY --from=builder /build .

# Build front assets once
RUN DS_ENV=BUILD_FRONT ./ducksoup

ENV LD_LIBRARY_PATH="$LD_LIBRARY_PATH:/app/plugins"
ENV GST_PLUGIN_PATH="$GST_PLUGIN_PATH:/app/plugins"

CMD ./ducksoup